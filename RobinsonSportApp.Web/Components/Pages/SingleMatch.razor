@page "/match/{EventDbId:int}"
@using RobinsonSportApp.Core.Managers.EventComments
@using RobinsonSportApp.Core.Managers.Events
@using RobinsonSportApp.Core.Managers.Events.Models
@using RobinsonSportApp.Core.Models
@using RobinsonSportApp.Data.Entities
@inject IEventManager eventManager
@inject IEventCommentManager eventCommentManager

@if (EventDetails != null)
{
    <div class="match-card">
        <div class="teams">
            <div class="team team-home">
                @if (EventDetails.Score1 > EventDetails.Score2)
                {
                    <span class="team-name"><b>@EventDetails.Opponent1</b></span>
                }
                else
                {
                    <span class="team-name">@EventDetails.Opponent1</span>
                }
                <img src="@EventDetails.Opponent1Logo" alt="Home Team Logo" class="team-logo">
            </div>
            <div class="score">
                @if (EventDetails.IsPastMatch)
                {
                    <span>@EventDetails.Score1 - @EventDetails.Score2</span>
                }
                else
                {
                    <span>VS</span>
                }
            </div>
            <div class="team team-away">
                <img src="@EventDetails.Opponent2Logo" alt="Away Team Logo" class="team-logo">
                @if (EventDetails.Score2 > EventDetails.Score1)
                {
                    <span class="team-name"><b>@EventDetails.Opponent2</b></span>
                }
                else
                {
                    <span class="team-name">@EventDetails.Opponent2</span>
                }
            </div>
        </div>
        <div class="match-details">
            <span class="match-time">@EventDetails.StartTime.ToString("dddd, MMMM dd, yyyy HH:mm")</span>
            <span class="match-location">@EventDetails.Place</span>
        </div>
        @if (EventDetails.IsLiveMatch)
        {
            <div class="live-indicator">Match is Live Now!</div>
        }
    </div>
    <div class="additional-info">
        @* TODO: think about how to save additional info, or is there a need? *@

        @if (true)
        @* @if (EventDetails.AdditionalInfo != null) *@
        {
            <h2>Additional Information</h2>
            @* <p>@EventDetails.AdditionalInfo</p> *@
        }
    </div>
    <div class="comments-section">
        <h2>Comments</h2>
        <div class="comment-form">
            <textarea placeholder="Add a comment..." rows="3"></textarea>
            <button type="button" @onclick="AddEventComment">Post Comment</button>
        </div>
        @* TODO: uncomment when event comments functionality is ready *@

@*         <div class="comments-list">
            @foreach (var comment in EventDetails.Comments.OrderByDescending(c => c.CreatedDate))
            {
                <div class="comment-item">
                    <div class="comment-header">
                        <p class="comment-author">@comment.AuthorName</p>
                        <p class="comment-date">@comment.CreatedDate.ToString("MMMM dd, yyyy HH:mm")</p>
                    </div>
                    <p class="comment-content">@comment.Content</p>
                </div>
            }
        </div> *@
    </div>
}
else
{
    <p>Loading match details...</p>
}

@code {
    [Parameter]
    public int EventDbId { get; set; }

    private EventDetailedModel EventDetails { get; set; }

    protected override async Task OnInitializedAsync()
    {
        EventDetails = await eventManager.GetEventAsync(EventDbId);
    }

    private async Task AddEventComment()
    {
        
    }
}